{"version":3,"sources":["../../../../src/lib/interactive/components/InteractiveText.js"],"names":["InteractiveText","props","calculateTextWidth","renderSVG","bind","drawOnCanvas","isHover","moreProps","onHover","textWidth","helper","rect","mouseXY","x","y","width","height","nextProps","text","fontStyle","fontWeight","fontSize","fontFamily","ctx","bgFill","bgOpacity","bgStrokeWidth","bgStroke","textFill","font","measureText","selected","fillStyle","beginPath","fillRect","strokeStyle","lineWidth","strokeRect","textBaseline","textAlign","fillText","Error","interactiveCursorClass","onUnHover","onDragStart","onDrag","onDragComplete","getMouseCanvas","Component","position","xScale","yScale","chartConfig","xValue","yValue","propTypes","PropTypes","string","isRequired","number","oneOfType","func","defaultClassName","tolerance","bool","defaultProps","noop","type"],"mappings":"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","file":"InteractiveText.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\n\nimport { isDefined, noop, hexToRGBA } from \"../../utils\";\n\nclass InteractiveText extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.calculateTextWidth = true;\n\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\tconst { onHover } = this.props;\n\n\t\tif (\n\t\t\tisDefined(onHover)\n\t\t\t&& isDefined(this.textWidth)\n\t\t\t&& !this.calculateTextWidth\n\t\t) {\n\t\t\tconst { rect } = helper(this.props, moreProps, this.textWidth);\n\t\t\tconst { mouseXY: [x, y] } = moreProps;\n\n\t\t\tif (\n\t\t\t\tx >= rect.x\n\t\t\t\t&& y >= rect.y\n\t\t\t\t&& x <= rect.x + rect.width\n\t\t\t\t&& y <= rect.y + rect.height\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.calculateTextWidth = (\n\t\t\tnextProps.text !== this.props.text\n\t\t\t|| nextProps.fontStyle !== this.props.fontStyle\n\t\t\t|| nextProps.fontWeight !== this.props.fontWeight\n\t\t\t|| nextProps.fontSize !== this.props.fontSize\n\t\t\t|| nextProps.fontFamily !== this.props.fontFamily\n\t\t);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst {\n\t\t\tbgFill,\n\t\t\tbgOpacity,\n\t\t\tbgStrokeWidth,\n\t\t\tbgStroke,\n\t\t\ttextFill,\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\tfontStyle,\n\t\t\tfontWeight,\n\t\t\ttext,\n\t\t} = this.props;\n\n\t\tif (this.calculateTextWidth) {\n\t\t\tctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n\t\t\tconst { width } = ctx.measureText(text);\n\t\t\tthis.textWidth = width;\n\t\t\tthis.calculateTextWidth = false;\n\t\t}\n\n\t\tconst { selected } = this.props;\n\n\t\tconst { x, y, rect } = helper(this.props, moreProps, this.textWidth);\n\n\t\tctx.fillStyle = hexToRGBA(bgFill, bgOpacity);\n\n\t\tctx.beginPath();\n\t\tctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n\n\t\tif (selected) {\n\t\t\tctx.strokeStyle = bgStroke;\n\t\t\tctx.lineWidth = bgStrokeWidth;\n\t\t\tctx.strokeRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\n\t\tctx.fillStyle = textFill;\n\t\tctx.textBaseline = \"middle\";\n\t\tctx.textAlign = \"center\";\n\t\tctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n\n\t\tctx.beginPath();\n\t\tctx.fillText(text, x, y);\n\t}\n\trenderSVG() {\n\t\tthrow new Error(\"svg not implemented\");\n\t}\n\trender() {\n\t\tconst { selected, interactiveCursorClass } = this.props;\n\t\tconst { onHover, onUnHover } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tisHover={this.isHover}\n\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\tselected={selected}\n\n\t\t\tonDragStart={onDragStart}\n\t\t\tonDrag={onDrag}\n\t\t\tonDragComplete={onDragComplete}\n\t\t\tonHover={onHover}\n\t\t\tonUnHover={onUnHover}\n\n\t\t\tdrawOn={[\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\n\nfunction helper(props, moreProps, textWidth) {\n\tconst { position, fontSize } = props;\n\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\tconst [xValue, yValue] = position;\n\tconst x = xScale(xValue);\n\tconst y = yScale(yValue);\n\n\tconst rect = {\n\t\tx: x - textWidth / 2 - fontSize,\n\t\ty: y - fontSize,\n\t\twidth: textWidth + fontSize * 2,\n\t\theight: fontSize * 2,\n\t};\n\n\treturn {\n\t\tx, y, rect\n\t};\n}\n\nInteractiveText.propTypes = {\n\tbgFill: PropTypes.string.isRequired,\n\tbgOpacity: PropTypes.number.isRequired,\n\tbgStrokeWidth: PropTypes.number.isRequired,\n\tbgStroke: PropTypes.string.isRequired,\n\n\ttextFill: PropTypes.string.isRequired,\n\tfontFamily: PropTypes.string.isRequired,\n\tfontSize: PropTypes.number.isRequired,\n\tfontWeight: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string,\n\t]).isRequired,\n\tfontStyle: PropTypes.string.isRequired,\n\n\ttext: PropTypes.string.isRequired,\n\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdefaultClassName: PropTypes.string,\n\tinteractiveCursorClass: PropTypes.string,\n\n\ttolerance: PropTypes.number.isRequired,\n\tselected: PropTypes.bool.isRequired,\n};\n\nInteractiveText.defaultProps = {\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\n\ttype: \"SD\", // standard dev\n\tfontWeight: \"normal\", // standard dev\n\n\ttolerance: 4,\n\tselected: false,\n};\n\nexport default InteractiveText;"]}